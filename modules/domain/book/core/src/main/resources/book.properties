# Flyway
com.example.demo.book.flyway.locations=classpath:sql/oracle
com.example.demo.book.flyway.schemas=ORACLE


# JPA settings
spring.jpa.database-platform=org.hibernate.dialect.Oracle12cDialect

com.example.demo.book.datasource.database-name=XEPDB1

database-server=localhost:51521

com.example.demo.book.datasource.driver-class-name = oracle.jdbc.driver.OracleDriver
com.example.demo.book.datasource.username=${spring.datasource.username:oracle}
com.example.demo.book.datasource.password=${spring.datasource.password:admin}
com.example.demo.book.datasource.max-active=${spring.datasource.max-active:50}
com.example.demo.book.datasource.jdbc-url=jdbc:oracle:thin:@//${database-server}/${com.example.demo.book.datasource.database-name}

# kafka settings
spring.kafka.bootstrap-servers=3.126.223.219:9092
spring.cloud.stream.kafka.binder.brokers=3.126.223.219

spring.cloud.stream.defaultBinder=kafka
spring.cloud.stream.default.contentType=application/json
spring.cloud.stream.bindings.input.destination=test
spring.cloud.stream.kafka.binder.autoCreateTopics=false
#spring.cloud.stream.bindings.input.group=booksGroup

spring.cloud.stream.bindings.input.consumer.maxAttempts=3
spring.cloud.stream.bindings.input.consumer.backOffInitialInterval=500
spring.cloud.stream.bindings.input.consumer.backOffMaxInterval=1000
spring.cloud.stream.bindings.input.consumer.backOffMultiplier=2.0

#spring.cloud.stream.kafka.bindings.input.consumer.enableDlq=true